// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ShippeeAPI.Context;

#nullable disable

namespace ShippeeAPI.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("ShippeeAPI.Annoucement_State", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("status")
                        .HasColumnType("varchar(255)");

                    b.HasKey("id");

                    b.ToTable("Annoucement_Status");
                });

            modelBuilder.Entity("ShippeeAPI.Company", b =>
                {
                    b.Property<int>("siren")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("city")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("cp")
                        .HasColumnType("varchar(255)");

                    b.Property<int?>("id_effective")
                        .HasColumnType("int");

                    b.Property<int?>("id_naf")
                        .HasColumnType("int");

                    b.Property<string>("legal_form")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("name")
                        .HasColumnType("varchar(255)");

                    b.Property<bool?>("payment")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("picture")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("street")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("web_site")
                        .HasColumnType("varchar(255)");

                    b.HasKey("siren");

                    b.HasIndex("id_effective");

                    b.HasIndex("id_naf");

                    b.ToTable("Companies");
                });

            modelBuilder.Entity("ShippeeAPI.Effective", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("type")
                        .HasColumnType("varchar(255)");

                    b.HasKey("id");

                    b.ToTable("Effectives");
                });

            modelBuilder.Entity("ShippeeAPI.Job", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("id_naf")
                        .HasColumnType("int");

                    b.Property<string>("title")
                        .HasColumnType("varchar(255)");

                    b.HasKey("id");

                    b.HasIndex("id_naf");

                    b.ToTable("Jobs");
                });

            modelBuilder.Entity("ShippeeAPI.Naf_Division", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("id_naf")
                        .HasColumnType("int");

                    b.Property<string>("title")
                        .HasColumnType("varchar(255)");

                    b.HasKey("id");

                    b.HasIndex("id_naf");

                    b.ToTable("Naf_Divisions");
                });

            modelBuilder.Entity("ShippeeAPI.Naf_Section", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("title")
                        .HasColumnType("varchar(255)");

                    b.HasKey("id");

                    b.ToTable("Naf_Sections");
                });

            modelBuilder.Entity("ShippeeAPI.Skill", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("title")
                        .HasColumnType("varchar(255)");

                    b.HasKey("id");

                    b.ToTable("Skills");
                });

            modelBuilder.Entity("ShippeeAPI.Student_Skill", b =>
                {
                    b.Property<int>("user_id")
                        .HasColumnType("int");

                    b.Property<int>("skill_id")
                        .HasColumnType("int");

                    b.HasKey("user_id", "skill_id");

                    b.HasIndex("skill_id");

                    b.ToTable("Student_Skills");
                });

            modelBuilder.Entity("ShippeeAPI.Type_User", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("title")
                        .HasColumnType("varchar(255)");

                    b.HasKey("id");

                    b.ToTable("Type_Users");
                });

            modelBuilder.Entity("ShippeeAPI.User", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateOnly?>("birthday")
                        .HasColumnType("date");

                    b.Property<string>("city")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("cp")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("cv")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("description")
                        .HasColumnType("longtext");

                    b.Property<string>("email")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("firstname")
                        .HasColumnType("varchar(255)");

                    b.Property<int?>("id_company")
                        .HasColumnType("int");

                    b.Property<int?>("id_type_user")
                        .HasColumnType("int");

                    b.Property<bool?>("is_conveyed")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool?>("is_online")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("password")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("picture")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("surname")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("web_site")
                        .HasColumnType("varchar(255)");

                    b.HasKey("id");

                    b.HasIndex("id_company");

                    b.HasIndex("id_type_user");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("ShippeeAPI.Company", b =>
                {
                    b.HasOne("ShippeeAPI.Effective", "Effective")
                        .WithMany()
                        .HasForeignKey("id_effective");

                    b.HasOne("ShippeeAPI.Naf_Section", "Naf_Section")
                        .WithMany()
                        .HasForeignKey("id_naf");

                    b.Navigation("Effective");

                    b.Navigation("Naf_Section");
                });

            modelBuilder.Entity("ShippeeAPI.Job", b =>
                {
                    b.HasOne("ShippeeAPI.Naf_Section", "Naf_Section")
                        .WithMany()
                        .HasForeignKey("id_naf");

                    b.Navigation("Naf_Section");
                });

            modelBuilder.Entity("ShippeeAPI.Naf_Division", b =>
                {
                    b.HasOne("ShippeeAPI.Naf_Section", "Naf_Section")
                        .WithMany()
                        .HasForeignKey("id_naf");

                    b.Navigation("Naf_Section");
                });

            modelBuilder.Entity("ShippeeAPI.Student_Skill", b =>
                {
                    b.HasOne("ShippeeAPI.Skill", "Skill")
                        .WithMany("students")
                        .HasForeignKey("skill_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ShippeeAPI.User", "User")
                        .WithMany("skills")
                        .HasForeignKey("user_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Skill");

                    b.Navigation("User");
                });

            modelBuilder.Entity("ShippeeAPI.User", b =>
                {
                    b.HasOne("ShippeeAPI.Company", "Company")
                        .WithMany()
                        .HasForeignKey("id_company");

                    b.HasOne("ShippeeAPI.Type_User", "Type_User")
                        .WithMany()
                        .HasForeignKey("id_type_user");

                    b.Navigation("Company");

                    b.Navigation("Type_User");
                });

            modelBuilder.Entity("ShippeeAPI.Skill", b =>
                {
                    b.Navigation("students");
                });

            modelBuilder.Entity("ShippeeAPI.User", b =>
                {
                    b.Navigation("skills");
                });
#pragma warning restore 612, 618
        }
    }
}
